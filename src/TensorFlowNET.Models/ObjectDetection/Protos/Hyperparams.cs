// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: object_detection/protos/hyperparams.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tensorflow.Models.ObjectDetection.Protos {

  /// <summary>Holder for reflection information generated from object_detection/protos/hyperparams.proto</summary>
  public static partial class HyperparamsReflection {

    #region Descriptor
    /// <summary>File descriptor for object_detection/protos/hyperparams.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HyperparamsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilvYmplY3RfZGV0ZWN0aW9uL3Byb3Rvcy9oeXBlcnBhcmFtcy5wcm90bxIX",
            "b2JqZWN0X2RldGVjdGlvbi5wcm90b3Mi8wMKC0h5cGVycGFyYW1zEjMKAm9w",
            "GAEgASgOMicub2JqZWN0X2RldGVjdGlvbi5wcm90b3MuSHlwZXJwYXJhbXMu",
            "T3ASOQoLcmVndWxhcml6ZXIYAiABKAsyJC5vYmplY3RfZGV0ZWN0aW9uLnBy",
            "b3Rvcy5SZWd1bGFyaXplchI5Cgtpbml0aWFsaXplchgDIAEoCzIkLm9iamVj",
            "dF9kZXRlY3Rpb24ucHJvdG9zLkluaXRpYWxpemVyEkMKCmFjdGl2YXRpb24Y",
            "BCABKA4yLy5vYmplY3RfZGV0ZWN0aW9uLnByb3Rvcy5IeXBlcnBhcmFtcy5B",
            "Y3RpdmF0aW9uEjgKCmJhdGNoX25vcm0YBSABKAsyIi5vYmplY3RfZGV0ZWN0",
            "aW9uLnByb3Rvcy5CYXRjaE5vcm1IABI4Cgpncm91cF9ub3JtGAcgASgLMiIu",
            "b2JqZWN0X2RldGVjdGlvbi5wcm90b3MuR3JvdXBOb3JtSAASHAoUcmVndWxh",
            "cml6ZV9kZXB0aHdpc2UYBiABKAgiIAoCT3ASCAoETlVMTBAAEggKBENPTlYQ",
            "ARIGCgJGQxACIiwKCkFjdGl2YXRpb24SCAoETk9ORRAAEggKBFJFTFUQARIK",
            "CgZSRUxVXzYQAkISChBub3JtYWxpemVyX29uZW9mIqYBCgtSZWd1bGFyaXpl",
            "chJACg5sMV9yZWd1bGFyaXplchgBIAEoCzImLm9iamVjdF9kZXRlY3Rpb24u",
            "cHJvdG9zLkwxUmVndWxhcml6ZXJIABJACg5sMl9yZWd1bGFyaXplchgCIAEo",
            "CzImLm9iamVjdF9kZXRlY3Rpb24ucHJvdG9zLkwyUmVndWxhcml6ZXJIAEIT",
            "ChFyZWd1bGFyaXplcl9vbmVvZiIfCg1MMVJlZ3VsYXJpemVyEg4KBndlaWdo",
            "dBgBIAEoAiIfCg1MMlJlZ3VsYXJpemVyEg4KBndlaWdodBgBIAEoAiKzAgoL",
            "SW5pdGlhbGl6ZXISWwocdHJ1bmNhdGVkX25vcm1hbF9pbml0aWFsaXplchgB",
            "IAEoCzIzLm9iamVjdF9kZXRlY3Rpb24ucHJvdG9zLlRydW5jYXRlZE5vcm1h",
            "bEluaXRpYWxpemVySAASWwocdmFyaWFuY2Vfc2NhbGluZ19pbml0aWFsaXpl",
            "chgCIAEoCzIzLm9iamVjdF9kZXRlY3Rpb24ucHJvdG9zLlZhcmlhbmNlU2Nh",
            "bGluZ0luaXRpYWxpemVySAASVQoZcmFuZG9tX25vcm1hbF9pbml0aWFsaXpl",
            "chgDIAEoCzIwLm9iamVjdF9kZXRlY3Rpb24ucHJvdG9zLlJhbmRvbU5vcm1h",
            "bEluaXRpYWxpemVySABCEwoRaW5pdGlhbGl6ZXJfb25lb2YiOgoaVHJ1bmNh",
            "dGVkTm9ybWFsSW5pdGlhbGl6ZXISDAoEbWVhbhgBIAEoAhIOCgZzdGRkZXYY",
            "AiABKAIiswEKGlZhcmlhbmNlU2NhbGluZ0luaXRpYWxpemVyEg4KBmZhY3Rv",
            "chgBIAEoAhIPCgd1bmlmb3JtGAIgASgIEkYKBG1vZGUYAyABKA4yOC5vYmpl",
            "Y3RfZGV0ZWN0aW9uLnByb3Rvcy5WYXJpYW5jZVNjYWxpbmdJbml0aWFsaXpl",
            "ci5Nb2RlIiwKBE1vZGUSCgoGRkFOX0lOEAASCwoHRkFOX09VVBABEgsKB0ZB",
            "Tl9BVkcQAiI3ChdSYW5kb21Ob3JtYWxJbml0aWFsaXplchIMCgRtZWFuGAEg",
            "ASgCEg4KBnN0ZGRldhgCIAEoAiJZCglCYXRjaE5vcm0SDQoFZGVjYXkYASAB",
            "KAISDgoGY2VudGVyGAIgASgIEg0KBXNjYWxlGAMgASgIEg8KB2Vwc2lsb24Y",
            "BCABKAISDQoFdHJhaW4YBSABKAgiCwoJR3JvdXBOb3JtYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.Hyperparams), global::Tensorflow.Models.ObjectDetection.Protos.Hyperparams.Parser, new[]{ "Op", "Regularizer", "Initializer", "Activation", "BatchNorm", "GroupNorm", "RegularizeDepthwise" }, new[]{ "NormalizerOneof" }, new[]{ typeof(global::Tensorflow.Models.ObjectDetection.Protos.Hyperparams.Types.Op), typeof(global::Tensorflow.Models.ObjectDetection.Protos.Hyperparams.Types.Activation) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.Regularizer), global::Tensorflow.Models.ObjectDetection.Protos.Regularizer.Parser, new[]{ "L1Regularizer", "L2Regularizer" }, new[]{ "RegularizerOneof" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.L1Regularizer), global::Tensorflow.Models.ObjectDetection.Protos.L1Regularizer.Parser, new[]{ "Weight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.L2Regularizer), global::Tensorflow.Models.ObjectDetection.Protos.L2Regularizer.Parser, new[]{ "Weight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.Initializer), global::Tensorflow.Models.ObjectDetection.Protos.Initializer.Parser, new[]{ "TruncatedNormalInitializer", "VarianceScalingInitializer", "RandomNormalInitializer" }, new[]{ "InitializerOneof" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.TruncatedNormalInitializer), global::Tensorflow.Models.ObjectDetection.Protos.TruncatedNormalInitializer.Parser, new[]{ "Mean", "Stddev" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.VarianceScalingInitializer), global::Tensorflow.Models.ObjectDetection.Protos.VarianceScalingInitializer.Parser, new[]{ "Factor", "Uniform", "Mode" }, null, new[]{ typeof(global::Tensorflow.Models.ObjectDetection.Protos.VarianceScalingInitializer.Types.Mode) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.RandomNormalInitializer), global::Tensorflow.Models.ObjectDetection.Protos.RandomNormalInitializer.Parser, new[]{ "Mean", "Stddev" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.BatchNorm), global::Tensorflow.Models.ObjectDetection.Protos.BatchNorm.Parser, new[]{ "Decay", "Center", "Scale", "Epsilon", "Train" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.GroupNorm), global::Tensorflow.Models.ObjectDetection.Protos.GroupNorm.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Configuration proto for the convolution op hyperparameters to use in the
  /// object detection pipeline.
  /// </summary>
  public sealed partial class Hyperparams : pb::IMessage<Hyperparams> {
    private static readonly pb::MessageParser<Hyperparams> _parser = new pb::MessageParser<Hyperparams>(() => new Hyperparams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hyperparams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.HyperparamsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hyperparams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hyperparams(Hyperparams other) : this() {
      op_ = other.op_;
      regularizer_ = other.regularizer_ != null ? other.regularizer_.Clone() : null;
      initializer_ = other.initializer_ != null ? other.initializer_.Clone() : null;
      activation_ = other.activation_;
      regularizeDepthwise_ = other.regularizeDepthwise_;
      switch (other.NormalizerOneofCase) {
        case NormalizerOneofOneofCase.BatchNorm:
          BatchNorm = other.BatchNorm.Clone();
          break;
        case NormalizerOneofOneofCase.GroupNorm:
          GroupNorm = other.GroupNorm.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hyperparams Clone() {
      return new Hyperparams(this);
    }

    /// <summary>Field number for the "op" field.</summary>
    public const int OpFieldNumber = 1;
    private global::Tensorflow.Models.ObjectDetection.Protos.Hyperparams.Types.Op op_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.Hyperparams.Types.Op Op {
      get { return op_; }
      set {
        op_ = value;
      }
    }

    /// <summary>Field number for the "regularizer" field.</summary>
    public const int RegularizerFieldNumber = 2;
    private global::Tensorflow.Models.ObjectDetection.Protos.Regularizer regularizer_;
    /// <summary>
    /// Regularizer for the weights of the convolution op.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.Regularizer Regularizer {
      get { return regularizer_; }
      set {
        regularizer_ = value;
      }
    }

    /// <summary>Field number for the "initializer" field.</summary>
    public const int InitializerFieldNumber = 3;
    private global::Tensorflow.Models.ObjectDetection.Protos.Initializer initializer_;
    /// <summary>
    /// Initializer for the weights of the convolution op.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.Initializer Initializer {
      get { return initializer_; }
      set {
        initializer_ = value;
      }
    }

    /// <summary>Field number for the "activation" field.</summary>
    public const int ActivationFieldNumber = 4;
    private global::Tensorflow.Models.ObjectDetection.Protos.Hyperparams.Types.Activation activation_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.Hyperparams.Types.Activation Activation {
      get { return activation_; }
      set {
        activation_ = value;
      }
    }

    /// <summary>Field number for the "batch_norm" field.</summary>
    public const int BatchNormFieldNumber = 5;
    /// <summary>
    /// Note that if nothing below is selected, then no normalization is applied
    /// BatchNorm hyperparameters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.BatchNorm BatchNorm {
      get { return normalizerOneofCase_ == NormalizerOneofOneofCase.BatchNorm ? (global::Tensorflow.Models.ObjectDetection.Protos.BatchNorm) normalizerOneof_ : null; }
      set {
        normalizerOneof_ = value;
        normalizerOneofCase_ = value == null ? NormalizerOneofOneofCase.None : NormalizerOneofOneofCase.BatchNorm;
      }
    }

    /// <summary>Field number for the "group_norm" field.</summary>
    public const int GroupNormFieldNumber = 7;
    /// <summary>
    /// GroupNorm hyperparameters. This is only supported on a subset of models.
    /// Note that the current implementation of group norm instantiated in
    /// tf.contrib.group.layers.group_norm() only supports fixed_size_resizer
    /// for image preprocessing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.GroupNorm GroupNorm {
      get { return normalizerOneofCase_ == NormalizerOneofOneofCase.GroupNorm ? (global::Tensorflow.Models.ObjectDetection.Protos.GroupNorm) normalizerOneof_ : null; }
      set {
        normalizerOneof_ = value;
        normalizerOneofCase_ = value == null ? NormalizerOneofOneofCase.None : NormalizerOneofOneofCase.GroupNorm;
      }
    }

    /// <summary>Field number for the "regularize_depthwise" field.</summary>
    public const int RegularizeDepthwiseFieldNumber = 6;
    private bool regularizeDepthwise_;
    /// <summary>
    /// Whether depthwise convolutions should be regularized. If this parameter is
    /// NOT set then the conv hyperparams will default to the parent scope.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RegularizeDepthwise {
      get { return regularizeDepthwise_; }
      set {
        regularizeDepthwise_ = value;
      }
    }

    private object normalizerOneof_;
    /// <summary>Enum of possible cases for the "normalizer_oneof" oneof.</summary>
    public enum NormalizerOneofOneofCase {
      None = 0,
      BatchNorm = 5,
      GroupNorm = 7,
    }
    private NormalizerOneofOneofCase normalizerOneofCase_ = NormalizerOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NormalizerOneofOneofCase NormalizerOneofCase {
      get { return normalizerOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNormalizerOneof() {
      normalizerOneofCase_ = NormalizerOneofOneofCase.None;
      normalizerOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hyperparams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hyperparams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Op != other.Op) return false;
      if (!object.Equals(Regularizer, other.Regularizer)) return false;
      if (!object.Equals(Initializer, other.Initializer)) return false;
      if (Activation != other.Activation) return false;
      if (!object.Equals(BatchNorm, other.BatchNorm)) return false;
      if (!object.Equals(GroupNorm, other.GroupNorm)) return false;
      if (RegularizeDepthwise != other.RegularizeDepthwise) return false;
      if (NormalizerOneofCase != other.NormalizerOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Op != 0) hash ^= Op.GetHashCode();
      if (regularizer_ != null) hash ^= Regularizer.GetHashCode();
      if (initializer_ != null) hash ^= Initializer.GetHashCode();
      if (Activation != 0) hash ^= Activation.GetHashCode();
      if (normalizerOneofCase_ == NormalizerOneofOneofCase.BatchNorm) hash ^= BatchNorm.GetHashCode();
      if (normalizerOneofCase_ == NormalizerOneofOneofCase.GroupNorm) hash ^= GroupNorm.GetHashCode();
      if (RegularizeDepthwise != false) hash ^= RegularizeDepthwise.GetHashCode();
      hash ^= (int) normalizerOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Op != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Op);
      }
      if (regularizer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Regularizer);
      }
      if (initializer_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Initializer);
      }
      if (Activation != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Activation);
      }
      if (normalizerOneofCase_ == NormalizerOneofOneofCase.BatchNorm) {
        output.WriteRawTag(42);
        output.WriteMessage(BatchNorm);
      }
      if (RegularizeDepthwise != false) {
        output.WriteRawTag(48);
        output.WriteBool(RegularizeDepthwise);
      }
      if (normalizerOneofCase_ == NormalizerOneofOneofCase.GroupNorm) {
        output.WriteRawTag(58);
        output.WriteMessage(GroupNorm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Op != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Op);
      }
      if (regularizer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Regularizer);
      }
      if (initializer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Initializer);
      }
      if (Activation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Activation);
      }
      if (normalizerOneofCase_ == NormalizerOneofOneofCase.BatchNorm) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BatchNorm);
      }
      if (normalizerOneofCase_ == NormalizerOneofOneofCase.GroupNorm) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupNorm);
      }
      if (RegularizeDepthwise != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hyperparams other) {
      if (other == null) {
        return;
      }
      if (other.Op != 0) {
        Op = other.Op;
      }
      if (other.regularizer_ != null) {
        if (regularizer_ == null) {
          regularizer_ = new global::Tensorflow.Models.ObjectDetection.Protos.Regularizer();
        }
        Regularizer.MergeFrom(other.Regularizer);
      }
      if (other.initializer_ != null) {
        if (initializer_ == null) {
          initializer_ = new global::Tensorflow.Models.ObjectDetection.Protos.Initializer();
        }
        Initializer.MergeFrom(other.Initializer);
      }
      if (other.Activation != 0) {
        Activation = other.Activation;
      }
      if (other.RegularizeDepthwise != false) {
        RegularizeDepthwise = other.RegularizeDepthwise;
      }
      switch (other.NormalizerOneofCase) {
        case NormalizerOneofOneofCase.BatchNorm:
          if (BatchNorm == null) {
            BatchNorm = new global::Tensorflow.Models.ObjectDetection.Protos.BatchNorm();
          }
          BatchNorm.MergeFrom(other.BatchNorm);
          break;
        case NormalizerOneofOneofCase.GroupNorm:
          if (GroupNorm == null) {
            GroupNorm = new global::Tensorflow.Models.ObjectDetection.Protos.GroupNorm();
          }
          GroupNorm.MergeFrom(other.GroupNorm);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            op_ = (global::Tensorflow.Models.ObjectDetection.Protos.Hyperparams.Types.Op) input.ReadEnum();
            break;
          }
          case 18: {
            if (regularizer_ == null) {
              regularizer_ = new global::Tensorflow.Models.ObjectDetection.Protos.Regularizer();
            }
            input.ReadMessage(regularizer_);
            break;
          }
          case 26: {
            if (initializer_ == null) {
              initializer_ = new global::Tensorflow.Models.ObjectDetection.Protos.Initializer();
            }
            input.ReadMessage(initializer_);
            break;
          }
          case 32: {
            activation_ = (global::Tensorflow.Models.ObjectDetection.Protos.Hyperparams.Types.Activation) input.ReadEnum();
            break;
          }
          case 42: {
            global::Tensorflow.Models.ObjectDetection.Protos.BatchNorm subBuilder = new global::Tensorflow.Models.ObjectDetection.Protos.BatchNorm();
            if (normalizerOneofCase_ == NormalizerOneofOneofCase.BatchNorm) {
              subBuilder.MergeFrom(BatchNorm);
            }
            input.ReadMessage(subBuilder);
            BatchNorm = subBuilder;
            break;
          }
          case 48: {
            RegularizeDepthwise = input.ReadBool();
            break;
          }
          case 58: {
            global::Tensorflow.Models.ObjectDetection.Protos.GroupNorm subBuilder = new global::Tensorflow.Models.ObjectDetection.Protos.GroupNorm();
            if (normalizerOneofCase_ == NormalizerOneofOneofCase.GroupNorm) {
              subBuilder.MergeFrom(GroupNorm);
            }
            input.ReadMessage(subBuilder);
            GroupNorm = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Hyperparams message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Operations affected by hyperparameters.
      /// </summary>
      public enum Op {
        /// <summary>
        /// Use None 
        /// </summary>
        [pbr::OriginalName("NULL")] Null = 0,
        /// <summary>
        /// Convolution, Separable Convolution, Convolution transpose.
        /// </summary>
        [pbr::OriginalName("CONV")] Conv = 1,
        /// <summary>
        /// Fully connected
        /// </summary>
        [pbr::OriginalName("FC")] Fc = 2,
      }

      /// <summary>
      /// Type of activation to apply after convolution.
      /// </summary>
      public enum Activation {
        /// <summary>
        /// Use None (no activation)
        /// </summary>
        [pbr::OriginalName("NONE")] None = 0,
        /// <summary>
        /// Use tf.nn.relu
        /// </summary>
        [pbr::OriginalName("RELU")] Relu = 1,
        /// <summary>
        /// Use tf.nn.relu6
        /// </summary>
        [pbr::OriginalName("RELU_6")] Relu6 = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Proto with one-of field for regularizers.
  /// </summary>
  public sealed partial class Regularizer : pb::IMessage<Regularizer> {
    private static readonly pb::MessageParser<Regularizer> _parser = new pb::MessageParser<Regularizer>(() => new Regularizer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Regularizer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.HyperparamsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Regularizer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Regularizer(Regularizer other) : this() {
      switch (other.RegularizerOneofCase) {
        case RegularizerOneofOneofCase.L1Regularizer:
          L1Regularizer = other.L1Regularizer.Clone();
          break;
        case RegularizerOneofOneofCase.L2Regularizer:
          L2Regularizer = other.L2Regularizer.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Regularizer Clone() {
      return new Regularizer(this);
    }

    /// <summary>Field number for the "l1_regularizer" field.</summary>
    public const int L1RegularizerFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.L1Regularizer L1Regularizer {
      get { return regularizerOneofCase_ == RegularizerOneofOneofCase.L1Regularizer ? (global::Tensorflow.Models.ObjectDetection.Protos.L1Regularizer) regularizerOneof_ : null; }
      set {
        regularizerOneof_ = value;
        regularizerOneofCase_ = value == null ? RegularizerOneofOneofCase.None : RegularizerOneofOneofCase.L1Regularizer;
      }
    }

    /// <summary>Field number for the "l2_regularizer" field.</summary>
    public const int L2RegularizerFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.L2Regularizer L2Regularizer {
      get { return regularizerOneofCase_ == RegularizerOneofOneofCase.L2Regularizer ? (global::Tensorflow.Models.ObjectDetection.Protos.L2Regularizer) regularizerOneof_ : null; }
      set {
        regularizerOneof_ = value;
        regularizerOneofCase_ = value == null ? RegularizerOneofOneofCase.None : RegularizerOneofOneofCase.L2Regularizer;
      }
    }

    private object regularizerOneof_;
    /// <summary>Enum of possible cases for the "regularizer_oneof" oneof.</summary>
    public enum RegularizerOneofOneofCase {
      None = 0,
      L1Regularizer = 1,
      L2Regularizer = 2,
    }
    private RegularizerOneofOneofCase regularizerOneofCase_ = RegularizerOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegularizerOneofOneofCase RegularizerOneofCase {
      get { return regularizerOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRegularizerOneof() {
      regularizerOneofCase_ = RegularizerOneofOneofCase.None;
      regularizerOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Regularizer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Regularizer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(L1Regularizer, other.L1Regularizer)) return false;
      if (!object.Equals(L2Regularizer, other.L2Regularizer)) return false;
      if (RegularizerOneofCase != other.RegularizerOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (regularizerOneofCase_ == RegularizerOneofOneofCase.L1Regularizer) hash ^= L1Regularizer.GetHashCode();
      if (regularizerOneofCase_ == RegularizerOneofOneofCase.L2Regularizer) hash ^= L2Regularizer.GetHashCode();
      hash ^= (int) regularizerOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (regularizerOneofCase_ == RegularizerOneofOneofCase.L1Regularizer) {
        output.WriteRawTag(10);
        output.WriteMessage(L1Regularizer);
      }
      if (regularizerOneofCase_ == RegularizerOneofOneofCase.L2Regularizer) {
        output.WriteRawTag(18);
        output.WriteMessage(L2Regularizer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (regularizerOneofCase_ == RegularizerOneofOneofCase.L1Regularizer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(L1Regularizer);
      }
      if (regularizerOneofCase_ == RegularizerOneofOneofCase.L2Regularizer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(L2Regularizer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Regularizer other) {
      if (other == null) {
        return;
      }
      switch (other.RegularizerOneofCase) {
        case RegularizerOneofOneofCase.L1Regularizer:
          if (L1Regularizer == null) {
            L1Regularizer = new global::Tensorflow.Models.ObjectDetection.Protos.L1Regularizer();
          }
          L1Regularizer.MergeFrom(other.L1Regularizer);
          break;
        case RegularizerOneofOneofCase.L2Regularizer:
          if (L2Regularizer == null) {
            L2Regularizer = new global::Tensorflow.Models.ObjectDetection.Protos.L2Regularizer();
          }
          L2Regularizer.MergeFrom(other.L2Regularizer);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Tensorflow.Models.ObjectDetection.Protos.L1Regularizer subBuilder = new global::Tensorflow.Models.ObjectDetection.Protos.L1Regularizer();
            if (regularizerOneofCase_ == RegularizerOneofOneofCase.L1Regularizer) {
              subBuilder.MergeFrom(L1Regularizer);
            }
            input.ReadMessage(subBuilder);
            L1Regularizer = subBuilder;
            break;
          }
          case 18: {
            global::Tensorflow.Models.ObjectDetection.Protos.L2Regularizer subBuilder = new global::Tensorflow.Models.ObjectDetection.Protos.L2Regularizer();
            if (regularizerOneofCase_ == RegularizerOneofOneofCase.L2Regularizer) {
              subBuilder.MergeFrom(L2Regularizer);
            }
            input.ReadMessage(subBuilder);
            L2Regularizer = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration proto for L1 Regularizer.
  /// See https://www.tensorflow.org/api_docs/python/tf/contrib/layers/l1_regularizer
  /// </summary>
  public sealed partial class L1Regularizer : pb::IMessage<L1Regularizer> {
    private static readonly pb::MessageParser<L1Regularizer> _parser = new pb::MessageParser<L1Regularizer>(() => new L1Regularizer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<L1Regularizer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.HyperparamsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public L1Regularizer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public L1Regularizer(L1Regularizer other) : this() {
      weight_ = other.weight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public L1Regularizer Clone() {
      return new L1Regularizer(this);
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 1;
    private float weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as L1Regularizer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(L1Regularizer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Weight, other.Weight)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Weight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Weight);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Weight != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Weight != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(L1Regularizer other) {
      if (other == null) {
        return;
      }
      if (other.Weight != 0F) {
        Weight = other.Weight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Weight = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration proto for L2 Regularizer.
  /// See https://www.tensorflow.org/api_docs/python/tf/contrib/layers/l2_regularizer
  /// </summary>
  public sealed partial class L2Regularizer : pb::IMessage<L2Regularizer> {
    private static readonly pb::MessageParser<L2Regularizer> _parser = new pb::MessageParser<L2Regularizer>(() => new L2Regularizer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<L2Regularizer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.HyperparamsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public L2Regularizer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public L2Regularizer(L2Regularizer other) : this() {
      weight_ = other.weight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public L2Regularizer Clone() {
      return new L2Regularizer(this);
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 1;
    private float weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as L2Regularizer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(L2Regularizer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Weight, other.Weight)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Weight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Weight);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Weight != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Weight != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(L2Regularizer other) {
      if (other == null) {
        return;
      }
      if (other.Weight != 0F) {
        Weight = other.Weight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Weight = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Proto with one-of field for initializers.
  /// </summary>
  public sealed partial class Initializer : pb::IMessage<Initializer> {
    private static readonly pb::MessageParser<Initializer> _parser = new pb::MessageParser<Initializer>(() => new Initializer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Initializer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.HyperparamsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Initializer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Initializer(Initializer other) : this() {
      switch (other.InitializerOneofCase) {
        case InitializerOneofOneofCase.TruncatedNormalInitializer:
          TruncatedNormalInitializer = other.TruncatedNormalInitializer.Clone();
          break;
        case InitializerOneofOneofCase.VarianceScalingInitializer:
          VarianceScalingInitializer = other.VarianceScalingInitializer.Clone();
          break;
        case InitializerOneofOneofCase.RandomNormalInitializer:
          RandomNormalInitializer = other.RandomNormalInitializer.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Initializer Clone() {
      return new Initializer(this);
    }

    /// <summary>Field number for the "truncated_normal_initializer" field.</summary>
    public const int TruncatedNormalInitializerFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.TruncatedNormalInitializer TruncatedNormalInitializer {
      get { return initializerOneofCase_ == InitializerOneofOneofCase.TruncatedNormalInitializer ? (global::Tensorflow.Models.ObjectDetection.Protos.TruncatedNormalInitializer) initializerOneof_ : null; }
      set {
        initializerOneof_ = value;
        initializerOneofCase_ = value == null ? InitializerOneofOneofCase.None : InitializerOneofOneofCase.TruncatedNormalInitializer;
      }
    }

    /// <summary>Field number for the "variance_scaling_initializer" field.</summary>
    public const int VarianceScalingInitializerFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.VarianceScalingInitializer VarianceScalingInitializer {
      get { return initializerOneofCase_ == InitializerOneofOneofCase.VarianceScalingInitializer ? (global::Tensorflow.Models.ObjectDetection.Protos.VarianceScalingInitializer) initializerOneof_ : null; }
      set {
        initializerOneof_ = value;
        initializerOneofCase_ = value == null ? InitializerOneofOneofCase.None : InitializerOneofOneofCase.VarianceScalingInitializer;
      }
    }

    /// <summary>Field number for the "random_normal_initializer" field.</summary>
    public const int RandomNormalInitializerFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.RandomNormalInitializer RandomNormalInitializer {
      get { return initializerOneofCase_ == InitializerOneofOneofCase.RandomNormalInitializer ? (global::Tensorflow.Models.ObjectDetection.Protos.RandomNormalInitializer) initializerOneof_ : null; }
      set {
        initializerOneof_ = value;
        initializerOneofCase_ = value == null ? InitializerOneofOneofCase.None : InitializerOneofOneofCase.RandomNormalInitializer;
      }
    }

    private object initializerOneof_;
    /// <summary>Enum of possible cases for the "initializer_oneof" oneof.</summary>
    public enum InitializerOneofOneofCase {
      None = 0,
      TruncatedNormalInitializer = 1,
      VarianceScalingInitializer = 2,
      RandomNormalInitializer = 3,
    }
    private InitializerOneofOneofCase initializerOneofCase_ = InitializerOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializerOneofOneofCase InitializerOneofCase {
      get { return initializerOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInitializerOneof() {
      initializerOneofCase_ = InitializerOneofOneofCase.None;
      initializerOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Initializer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Initializer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TruncatedNormalInitializer, other.TruncatedNormalInitializer)) return false;
      if (!object.Equals(VarianceScalingInitializer, other.VarianceScalingInitializer)) return false;
      if (!object.Equals(RandomNormalInitializer, other.RandomNormalInitializer)) return false;
      if (InitializerOneofCase != other.InitializerOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (initializerOneofCase_ == InitializerOneofOneofCase.TruncatedNormalInitializer) hash ^= TruncatedNormalInitializer.GetHashCode();
      if (initializerOneofCase_ == InitializerOneofOneofCase.VarianceScalingInitializer) hash ^= VarianceScalingInitializer.GetHashCode();
      if (initializerOneofCase_ == InitializerOneofOneofCase.RandomNormalInitializer) hash ^= RandomNormalInitializer.GetHashCode();
      hash ^= (int) initializerOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (initializerOneofCase_ == InitializerOneofOneofCase.TruncatedNormalInitializer) {
        output.WriteRawTag(10);
        output.WriteMessage(TruncatedNormalInitializer);
      }
      if (initializerOneofCase_ == InitializerOneofOneofCase.VarianceScalingInitializer) {
        output.WriteRawTag(18);
        output.WriteMessage(VarianceScalingInitializer);
      }
      if (initializerOneofCase_ == InitializerOneofOneofCase.RandomNormalInitializer) {
        output.WriteRawTag(26);
        output.WriteMessage(RandomNormalInitializer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (initializerOneofCase_ == InitializerOneofOneofCase.TruncatedNormalInitializer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TruncatedNormalInitializer);
      }
      if (initializerOneofCase_ == InitializerOneofOneofCase.VarianceScalingInitializer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VarianceScalingInitializer);
      }
      if (initializerOneofCase_ == InitializerOneofOneofCase.RandomNormalInitializer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RandomNormalInitializer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Initializer other) {
      if (other == null) {
        return;
      }
      switch (other.InitializerOneofCase) {
        case InitializerOneofOneofCase.TruncatedNormalInitializer:
          if (TruncatedNormalInitializer == null) {
            TruncatedNormalInitializer = new global::Tensorflow.Models.ObjectDetection.Protos.TruncatedNormalInitializer();
          }
          TruncatedNormalInitializer.MergeFrom(other.TruncatedNormalInitializer);
          break;
        case InitializerOneofOneofCase.VarianceScalingInitializer:
          if (VarianceScalingInitializer == null) {
            VarianceScalingInitializer = new global::Tensorflow.Models.ObjectDetection.Protos.VarianceScalingInitializer();
          }
          VarianceScalingInitializer.MergeFrom(other.VarianceScalingInitializer);
          break;
        case InitializerOneofOneofCase.RandomNormalInitializer:
          if (RandomNormalInitializer == null) {
            RandomNormalInitializer = new global::Tensorflow.Models.ObjectDetection.Protos.RandomNormalInitializer();
          }
          RandomNormalInitializer.MergeFrom(other.RandomNormalInitializer);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Tensorflow.Models.ObjectDetection.Protos.TruncatedNormalInitializer subBuilder = new global::Tensorflow.Models.ObjectDetection.Protos.TruncatedNormalInitializer();
            if (initializerOneofCase_ == InitializerOneofOneofCase.TruncatedNormalInitializer) {
              subBuilder.MergeFrom(TruncatedNormalInitializer);
            }
            input.ReadMessage(subBuilder);
            TruncatedNormalInitializer = subBuilder;
            break;
          }
          case 18: {
            global::Tensorflow.Models.ObjectDetection.Protos.VarianceScalingInitializer subBuilder = new global::Tensorflow.Models.ObjectDetection.Protos.VarianceScalingInitializer();
            if (initializerOneofCase_ == InitializerOneofOneofCase.VarianceScalingInitializer) {
              subBuilder.MergeFrom(VarianceScalingInitializer);
            }
            input.ReadMessage(subBuilder);
            VarianceScalingInitializer = subBuilder;
            break;
          }
          case 26: {
            global::Tensorflow.Models.ObjectDetection.Protos.RandomNormalInitializer subBuilder = new global::Tensorflow.Models.ObjectDetection.Protos.RandomNormalInitializer();
            if (initializerOneofCase_ == InitializerOneofOneofCase.RandomNormalInitializer) {
              subBuilder.MergeFrom(RandomNormalInitializer);
            }
            input.ReadMessage(subBuilder);
            RandomNormalInitializer = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration proto for truncated normal initializer. See
  /// https://www.tensorflow.org/api_docs/python/tf/truncated_normal_initializer
  /// </summary>
  public sealed partial class TruncatedNormalInitializer : pb::IMessage<TruncatedNormalInitializer> {
    private static readonly pb::MessageParser<TruncatedNormalInitializer> _parser = new pb::MessageParser<TruncatedNormalInitializer>(() => new TruncatedNormalInitializer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TruncatedNormalInitializer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.HyperparamsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TruncatedNormalInitializer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TruncatedNormalInitializer(TruncatedNormalInitializer other) : this() {
      mean_ = other.mean_;
      stddev_ = other.stddev_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TruncatedNormalInitializer Clone() {
      return new TruncatedNormalInitializer(this);
    }

    /// <summary>Field number for the "mean" field.</summary>
    public const int MeanFieldNumber = 1;
    private float mean_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Mean {
      get { return mean_; }
      set {
        mean_ = value;
      }
    }

    /// <summary>Field number for the "stddev" field.</summary>
    public const int StddevFieldNumber = 2;
    private float stddev_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Stddev {
      get { return stddev_; }
      set {
        stddev_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TruncatedNormalInitializer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TruncatedNormalInitializer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Mean, other.Mean)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Stddev, other.Stddev)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mean != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Mean);
      if (Stddev != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Stddev);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Mean != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Mean);
      }
      if (Stddev != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Stddev);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mean != 0F) {
        size += 1 + 4;
      }
      if (Stddev != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TruncatedNormalInitializer other) {
      if (other == null) {
        return;
      }
      if (other.Mean != 0F) {
        Mean = other.Mean;
      }
      if (other.Stddev != 0F) {
        Stddev = other.Stddev;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Mean = input.ReadFloat();
            break;
          }
          case 21: {
            Stddev = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration proto for variance scaling initializer. See
  /// https://www.tensorflow.org/api_docs/python/tf/contrib/layers/
  /// variance_scaling_initializer
  /// </summary>
  public sealed partial class VarianceScalingInitializer : pb::IMessage<VarianceScalingInitializer> {
    private static readonly pb::MessageParser<VarianceScalingInitializer> _parser = new pb::MessageParser<VarianceScalingInitializer>(() => new VarianceScalingInitializer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VarianceScalingInitializer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.HyperparamsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VarianceScalingInitializer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VarianceScalingInitializer(VarianceScalingInitializer other) : this() {
      factor_ = other.factor_;
      uniform_ = other.uniform_;
      mode_ = other.mode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VarianceScalingInitializer Clone() {
      return new VarianceScalingInitializer(this);
    }

    /// <summary>Field number for the "factor" field.</summary>
    public const int FactorFieldNumber = 1;
    private float factor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Factor {
      get { return factor_; }
      set {
        factor_ = value;
      }
    }

    /// <summary>Field number for the "uniform" field.</summary>
    public const int UniformFieldNumber = 2;
    private bool uniform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Uniform {
      get { return uniform_; }
      set {
        uniform_ = value;
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 3;
    private global::Tensorflow.Models.ObjectDetection.Protos.VarianceScalingInitializer.Types.Mode mode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.VarianceScalingInitializer.Types.Mode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VarianceScalingInitializer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VarianceScalingInitializer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Factor, other.Factor)) return false;
      if (Uniform != other.Uniform) return false;
      if (Mode != other.Mode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Factor != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Factor);
      if (Uniform != false) hash ^= Uniform.GetHashCode();
      if (Mode != 0) hash ^= Mode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Factor != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Factor);
      }
      if (Uniform != false) {
        output.WriteRawTag(16);
        output.WriteBool(Uniform);
      }
      if (Mode != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Factor != 0F) {
        size += 1 + 4;
      }
      if (Uniform != false) {
        size += 1 + 1;
      }
      if (Mode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VarianceScalingInitializer other) {
      if (other == null) {
        return;
      }
      if (other.Factor != 0F) {
        Factor = other.Factor;
      }
      if (other.Uniform != false) {
        Uniform = other.Uniform;
      }
      if (other.Mode != 0) {
        Mode = other.Mode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Factor = input.ReadFloat();
            break;
          }
          case 16: {
            Uniform = input.ReadBool();
            break;
          }
          case 24: {
            mode_ = (global::Tensorflow.Models.ObjectDetection.Protos.VarianceScalingInitializer.Types.Mode) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the VarianceScalingInitializer message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Mode {
        [pbr::OriginalName("FAN_IN")] FanIn = 0,
        [pbr::OriginalName("FAN_OUT")] FanOut = 1,
        [pbr::OriginalName("FAN_AVG")] FanAvg = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Configuration proto for random normal initializer. See
  /// https://www.tensorflow.org/api_docs/python/tf/random_normal_initializer
  /// </summary>
  public sealed partial class RandomNormalInitializer : pb::IMessage<RandomNormalInitializer> {
    private static readonly pb::MessageParser<RandomNormalInitializer> _parser = new pb::MessageParser<RandomNormalInitializer>(() => new RandomNormalInitializer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RandomNormalInitializer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.HyperparamsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomNormalInitializer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomNormalInitializer(RandomNormalInitializer other) : this() {
      mean_ = other.mean_;
      stddev_ = other.stddev_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomNormalInitializer Clone() {
      return new RandomNormalInitializer(this);
    }

    /// <summary>Field number for the "mean" field.</summary>
    public const int MeanFieldNumber = 1;
    private float mean_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Mean {
      get { return mean_; }
      set {
        mean_ = value;
      }
    }

    /// <summary>Field number for the "stddev" field.</summary>
    public const int StddevFieldNumber = 2;
    private float stddev_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Stddev {
      get { return stddev_; }
      set {
        stddev_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RandomNormalInitializer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RandomNormalInitializer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Mean, other.Mean)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Stddev, other.Stddev)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mean != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Mean);
      if (Stddev != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Stddev);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Mean != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Mean);
      }
      if (Stddev != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Stddev);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mean != 0F) {
        size += 1 + 4;
      }
      if (Stddev != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RandomNormalInitializer other) {
      if (other == null) {
        return;
      }
      if (other.Mean != 0F) {
        Mean = other.Mean;
      }
      if (other.Stddev != 0F) {
        Stddev = other.Stddev;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Mean = input.ReadFloat();
            break;
          }
          case 21: {
            Stddev = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration proto for batch norm to apply after convolution op. See
  /// https://www.tensorflow.org/api_docs/python/tf/contrib/layers/batch_norm
  /// </summary>
  public sealed partial class BatchNorm : pb::IMessage<BatchNorm> {
    private static readonly pb::MessageParser<BatchNorm> _parser = new pb::MessageParser<BatchNorm>(() => new BatchNorm());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchNorm> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.HyperparamsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchNorm() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchNorm(BatchNorm other) : this() {
      decay_ = other.decay_;
      center_ = other.center_;
      scale_ = other.scale_;
      epsilon_ = other.epsilon_;
      train_ = other.train_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchNorm Clone() {
      return new BatchNorm(this);
    }

    /// <summary>Field number for the "decay" field.</summary>
    public const int DecayFieldNumber = 1;
    private float decay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Decay {
      get { return decay_; }
      set {
        decay_ = value;
      }
    }

    /// <summary>Field number for the "center" field.</summary>
    public const int CenterFieldNumber = 2;
    private bool center_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Center {
      get { return center_; }
      set {
        center_ = value;
      }
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 3;
    private bool scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    /// <summary>Field number for the "epsilon" field.</summary>
    public const int EpsilonFieldNumber = 4;
    private float epsilon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Epsilon {
      get { return epsilon_; }
      set {
        epsilon_ = value;
      }
    }

    /// <summary>Field number for the "train" field.</summary>
    public const int TrainFieldNumber = 5;
    private bool train_;
    /// <summary>
    /// Whether to train the batch norm variables. If this is set to false during
    /// training, the current value of the batch_norm variables are used for
    /// forward pass but they are never updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Train {
      get { return train_; }
      set {
        train_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchNorm);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchNorm other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Decay, other.Decay)) return false;
      if (Center != other.Center) return false;
      if (Scale != other.Scale) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Epsilon, other.Epsilon)) return false;
      if (Train != other.Train) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Decay != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Decay);
      if (Center != false) hash ^= Center.GetHashCode();
      if (Scale != false) hash ^= Scale.GetHashCode();
      if (Epsilon != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Epsilon);
      if (Train != false) hash ^= Train.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Decay != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Decay);
      }
      if (Center != false) {
        output.WriteRawTag(16);
        output.WriteBool(Center);
      }
      if (Scale != false) {
        output.WriteRawTag(24);
        output.WriteBool(Scale);
      }
      if (Epsilon != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Epsilon);
      }
      if (Train != false) {
        output.WriteRawTag(40);
        output.WriteBool(Train);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Decay != 0F) {
        size += 1 + 4;
      }
      if (Center != false) {
        size += 1 + 1;
      }
      if (Scale != false) {
        size += 1 + 1;
      }
      if (Epsilon != 0F) {
        size += 1 + 4;
      }
      if (Train != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchNorm other) {
      if (other == null) {
        return;
      }
      if (other.Decay != 0F) {
        Decay = other.Decay;
      }
      if (other.Center != false) {
        Center = other.Center;
      }
      if (other.Scale != false) {
        Scale = other.Scale;
      }
      if (other.Epsilon != 0F) {
        Epsilon = other.Epsilon;
      }
      if (other.Train != false) {
        Train = other.Train;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Decay = input.ReadFloat();
            break;
          }
          case 16: {
            Center = input.ReadBool();
            break;
          }
          case 24: {
            Scale = input.ReadBool();
            break;
          }
          case 37: {
            Epsilon = input.ReadFloat();
            break;
          }
          case 40: {
            Train = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration proto for group normalization to apply after convolution op.
  /// https://arxiv.org/abs/1803.08494
  /// </summary>
  public sealed partial class GroupNorm : pb::IMessage<GroupNorm> {
    private static readonly pb::MessageParser<GroupNorm> _parser = new pb::MessageParser<GroupNorm>(() => new GroupNorm());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupNorm> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.HyperparamsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupNorm() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupNorm(GroupNorm other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupNorm Clone() {
      return new GroupNorm(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupNorm);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupNorm other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupNorm other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
