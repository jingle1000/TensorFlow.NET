// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: object_detection/protos/keypoint_box_coder.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tensorflow.Models.ObjectDetection.Protos {

  /// <summary>Holder for reflection information generated from object_detection/protos/keypoint_box_coder.proto</summary>
  public static partial class KeypointBoxCoderReflection {

    #region Descriptor
    /// <summary>File descriptor for object_detection/protos/keypoint_box_coder.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static KeypointBoxCoderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBvYmplY3RfZGV0ZWN0aW9uL3Byb3Rvcy9rZXlwb2ludF9ib3hfY29kZXIu",
            "cHJvdG8SF29iamVjdF9kZXRlY3Rpb24ucHJvdG9zInYKEEtleXBvaW50Qm94",
            "Q29kZXISFQoNbnVtX2tleXBvaW50cxgBIAEoBRIPCgd5X3NjYWxlGAIgASgC",
            "Eg8KB3hfc2NhbGUYAyABKAISFAoMaGVpZ2h0X3NjYWxlGAQgASgCEhMKC3dp",
            "ZHRoX3NjYWxlGAUgASgCYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.KeypointBoxCoder), global::Tensorflow.Models.ObjectDetection.Protos.KeypointBoxCoder.Parser, new[]{ "NumKeypoints", "YScale", "XScale", "HeightScale", "WidthScale" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Configuration proto for KeypointBoxCoder. See
  /// box_coders/keypoint_box_coder.py for details.
  /// </summary>
  public sealed partial class KeypointBoxCoder : pb::IMessage<KeypointBoxCoder> {
    private static readonly pb::MessageParser<KeypointBoxCoder> _parser = new pb::MessageParser<KeypointBoxCoder>(() => new KeypointBoxCoder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeypointBoxCoder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.KeypointBoxCoderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeypointBoxCoder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeypointBoxCoder(KeypointBoxCoder other) : this() {
      numKeypoints_ = other.numKeypoints_;
      yScale_ = other.yScale_;
      xScale_ = other.xScale_;
      heightScale_ = other.heightScale_;
      widthScale_ = other.widthScale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeypointBoxCoder Clone() {
      return new KeypointBoxCoder(this);
    }

    /// <summary>Field number for the "num_keypoints" field.</summary>
    public const int NumKeypointsFieldNumber = 1;
    private int numKeypoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumKeypoints {
      get { return numKeypoints_; }
      set {
        numKeypoints_ = value;
      }
    }

    /// <summary>Field number for the "y_scale" field.</summary>
    public const int YScaleFieldNumber = 2;
    private float yScale_;
    /// <summary>
    /// Scale factor for anchor encoded box center and keypoints.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float YScale {
      get { return yScale_; }
      set {
        yScale_ = value;
      }
    }

    /// <summary>Field number for the "x_scale" field.</summary>
    public const int XScaleFieldNumber = 3;
    private float xScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float XScale {
      get { return xScale_; }
      set {
        xScale_ = value;
      }
    }

    /// <summary>Field number for the "height_scale" field.</summary>
    public const int HeightScaleFieldNumber = 4;
    private float heightScale_;
    /// <summary>
    /// Scale factor for anchor encoded box height.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float HeightScale {
      get { return heightScale_; }
      set {
        heightScale_ = value;
      }
    }

    /// <summary>Field number for the "width_scale" field.</summary>
    public const int WidthScaleFieldNumber = 5;
    private float widthScale_;
    /// <summary>
    /// Scale factor for anchor encoded box width.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float WidthScale {
      get { return widthScale_; }
      set {
        widthScale_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeypointBoxCoder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeypointBoxCoder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NumKeypoints != other.NumKeypoints) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(YScale, other.YScale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(XScale, other.XScale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HeightScale, other.HeightScale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WidthScale, other.WidthScale)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NumKeypoints != 0) hash ^= NumKeypoints.GetHashCode();
      if (YScale != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(YScale);
      if (XScale != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(XScale);
      if (HeightScale != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HeightScale);
      if (WidthScale != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WidthScale);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NumKeypoints != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NumKeypoints);
      }
      if (YScale != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(YScale);
      }
      if (XScale != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(XScale);
      }
      if (HeightScale != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(HeightScale);
      }
      if (WidthScale != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(WidthScale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NumKeypoints != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumKeypoints);
      }
      if (YScale != 0F) {
        size += 1 + 4;
      }
      if (XScale != 0F) {
        size += 1 + 4;
      }
      if (HeightScale != 0F) {
        size += 1 + 4;
      }
      if (WidthScale != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeypointBoxCoder other) {
      if (other == null) {
        return;
      }
      if (other.NumKeypoints != 0) {
        NumKeypoints = other.NumKeypoints;
      }
      if (other.YScale != 0F) {
        YScale = other.YScale;
      }
      if (other.XScale != 0F) {
        XScale = other.XScale;
      }
      if (other.HeightScale != 0F) {
        HeightScale = other.HeightScale;
      }
      if (other.WidthScale != 0F) {
        WidthScale = other.WidthScale;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NumKeypoints = input.ReadInt32();
            break;
          }
          case 21: {
            YScale = input.ReadFloat();
            break;
          }
          case 29: {
            XScale = input.ReadFloat();
            break;
          }
          case 37: {
            HeightScale = input.ReadFloat();
            break;
          }
          case 45: {
            WidthScale = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
