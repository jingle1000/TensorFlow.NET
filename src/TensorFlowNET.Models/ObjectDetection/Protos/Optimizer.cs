// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: object_detection/protos/optimizer.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tensorflow.Models.ObjectDetection.Protos {

  /// <summary>Holder for reflection information generated from object_detection/protos/optimizer.proto</summary>
  public static partial class OptimizerReflection {

    #region Descriptor
    /// <summary>File descriptor for object_detection/protos/optimizer.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OptimizerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidvYmplY3RfZGV0ZWN0aW9uL3Byb3Rvcy9vcHRpbWl6ZXIucHJvdG8SF29i",
            "amVjdF9kZXRlY3Rpb24ucHJvdG9zIqcCCglPcHRpbWl6ZXISRwoScm1zX3By",
            "b3Bfb3B0aW1pemVyGAEgASgLMikub2JqZWN0X2RldGVjdGlvbi5wcm90b3Mu",
            "Uk1TUHJvcE9wdGltaXplckgAEkgKEm1vbWVudHVtX29wdGltaXplchgCIAEo",
            "CzIqLm9iamVjdF9kZXRlY3Rpb24ucHJvdG9zLk1vbWVudHVtT3B0aW1pemVy",
            "SAASQAoOYWRhbV9vcHRpbWl6ZXIYAyABKAsyJi5vYmplY3RfZGV0ZWN0aW9u",
            "LnByb3Rvcy5BZGFtT3B0aW1pemVySAASGgoSdXNlX21vdmluZ19hdmVyYWdl",
            "GAQgASgIEhwKFG1vdmluZ19hdmVyYWdlX2RlY2F5GAUgASgCQgsKCW9wdGlt",
            "aXplciKSAQoQUk1TUHJvcE9wdGltaXplchI8Cg1sZWFybmluZ19yYXRlGAEg",
            "ASgLMiUub2JqZWN0X2RldGVjdGlvbi5wcm90b3MuTGVhcm5pbmdSYXRlEiAK",
            "GG1vbWVudHVtX29wdGltaXplcl92YWx1ZRgCIAEoAhINCgVkZWNheRgDIAEo",
            "AhIPCgdlcHNpbG9uGAQgASgCInMKEU1vbWVudHVtT3B0aW1pemVyEjwKDWxl",
            "YXJuaW5nX3JhdGUYASABKAsyJS5vYmplY3RfZGV0ZWN0aW9uLnByb3Rvcy5M",
            "ZWFybmluZ1JhdGUSIAoYbW9tZW50dW1fb3B0aW1pemVyX3ZhbHVlGAIgASgC",
            "Ik0KDUFkYW1PcHRpbWl6ZXISPAoNbGVhcm5pbmdfcmF0ZRgBIAEoCzIlLm9i",
            "amVjdF9kZXRlY3Rpb24ucHJvdG9zLkxlYXJuaW5nUmF0ZSKAAwoMTGVhcm5p",
            "bmdSYXRlEk8KFmNvbnN0YW50X2xlYXJuaW5nX3JhdGUYASABKAsyLS5vYmpl",
            "Y3RfZGV0ZWN0aW9uLnByb3Rvcy5Db25zdGFudExlYXJuaW5nUmF0ZUgAEmAK",
            "H2V4cG9uZW50aWFsX2RlY2F5X2xlYXJuaW5nX3JhdGUYAiABKAsyNS5vYmpl",
            "Y3RfZGV0ZWN0aW9uLnByb3Rvcy5FeHBvbmVudGlhbERlY2F5TGVhcm5pbmdS",
            "YXRlSAASVAoZbWFudWFsX3N0ZXBfbGVhcm5pbmdfcmF0ZRgDIAEoCzIvLm9i",
            "amVjdF9kZXRlY3Rpb24ucHJvdG9zLk1hbnVhbFN0ZXBMZWFybmluZ1JhdGVI",
            "ABJWChpjb3NpbmVfZGVjYXlfbGVhcm5pbmdfcmF0ZRgEIAEoCzIwLm9iamVj",
            "dF9kZXRlY3Rpb24ucHJvdG9zLkNvc2luZURlY2F5TGVhcm5pbmdSYXRlSABC",
            "DwoNbGVhcm5pbmdfcmF0ZSItChRDb25zdGFudExlYXJuaW5nUmF0ZRIVCg1s",
            "ZWFybmluZ19yYXRlGAEgASgCIsoBChxFeHBvbmVudGlhbERlY2F5TGVhcm5p",
            "bmdSYXRlEh0KFWluaXRpYWxfbGVhcm5pbmdfcmF0ZRgBIAEoAhITCgtkZWNh",
            "eV9zdGVwcxgCIAEoDRIUCgxkZWNheV9mYWN0b3IYAyABKAISEQoJc3RhaXJj",
            "YXNlGAQgASgIEhwKFGJ1cm5pbl9sZWFybmluZ19yYXRlGAUgASgCEhQKDGJ1",
            "cm5pbl9zdGVwcxgGIAEoDRIZChFtaW5fbGVhcm5pbmdfcmF0ZRgHIAEoAiLc",
            "AQoWTWFudWFsU3RlcExlYXJuaW5nUmF0ZRIdChVpbml0aWFsX2xlYXJuaW5n",
            "X3JhdGUYASABKAISVgoIc2NoZWR1bGUYAiADKAsyRC5vYmplY3RfZGV0ZWN0",
            "aW9uLnByb3Rvcy5NYW51YWxTdGVwTGVhcm5pbmdSYXRlLkxlYXJuaW5nUmF0",
            "ZVNjaGVkdWxlEg4KBndhcm11cBgDIAEoCBo7ChRMZWFybmluZ1JhdGVTY2hl",
            "ZHVsZRIMCgRzdGVwGAEgASgNEhUKDWxlYXJuaW5nX3JhdGUYAiABKAIinAEK",
            "F0Nvc2luZURlY2F5TGVhcm5pbmdSYXRlEhoKEmxlYXJuaW5nX3JhdGVfYmFz",
            "ZRgBIAEoAhITCgt0b3RhbF9zdGVwcxgCIAEoDRIcChR3YXJtdXBfbGVhcm5p",
            "bmdfcmF0ZRgDIAEoAhIUCgx3YXJtdXBfc3RlcHMYBCABKA0SHAoUaG9sZF9i",
            "YXNlX3JhdGVfc3RlcHMYBSABKA1iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.Optimizer), global::Tensorflow.Models.ObjectDetection.Protos.Optimizer.Parser, new[]{ "RmsPropOptimizer", "MomentumOptimizer", "AdamOptimizer", "UseMovingAverage", "MovingAverageDecay" }, new[]{ "Optimizer" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.RMSPropOptimizer), global::Tensorflow.Models.ObjectDetection.Protos.RMSPropOptimizer.Parser, new[]{ "LearningRate", "MomentumOptimizerValue", "Decay", "Epsilon" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.MomentumOptimizer), global::Tensorflow.Models.ObjectDetection.Protos.MomentumOptimizer.Parser, new[]{ "LearningRate", "MomentumOptimizerValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.AdamOptimizer), global::Tensorflow.Models.ObjectDetection.Protos.AdamOptimizer.Parser, new[]{ "LearningRate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.LearningRate), global::Tensorflow.Models.ObjectDetection.Protos.LearningRate.Parser, new[]{ "ConstantLearningRate", "ExponentialDecayLearningRate", "ManualStepLearningRate", "CosineDecayLearningRate" }, new[]{ "LearningRate" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.ConstantLearningRate), global::Tensorflow.Models.ObjectDetection.Protos.ConstantLearningRate.Parser, new[]{ "LearningRate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.ExponentialDecayLearningRate), global::Tensorflow.Models.ObjectDetection.Protos.ExponentialDecayLearningRate.Parser, new[]{ "InitialLearningRate", "DecaySteps", "DecayFactor", "Staircase", "BurninLearningRate", "BurninSteps", "MinLearningRate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.ManualStepLearningRate), global::Tensorflow.Models.ObjectDetection.Protos.ManualStepLearningRate.Parser, new[]{ "InitialLearningRate", "Schedule", "Warmup" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.ManualStepLearningRate.Types.LearningRateSchedule), global::Tensorflow.Models.ObjectDetection.Protos.ManualStepLearningRate.Types.LearningRateSchedule.Parser, new[]{ "Step", "LearningRate" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Models.ObjectDetection.Protos.CosineDecayLearningRate), global::Tensorflow.Models.ObjectDetection.Protos.CosineDecayLearningRate.Parser, new[]{ "LearningRateBase", "TotalSteps", "WarmupLearningRate", "WarmupSteps", "HoldBaseRateSteps" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Top level optimizer message.
  /// </summary>
  public sealed partial class Optimizer : pb::IMessage<Optimizer> {
    private static readonly pb::MessageParser<Optimizer> _parser = new pb::MessageParser<Optimizer>(() => new Optimizer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Optimizer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.OptimizerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Optimizer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Optimizer(Optimizer other) : this() {
      useMovingAverage_ = other.useMovingAverage_;
      movingAverageDecay_ = other.movingAverageDecay_;
      switch (other.OptimizerCase) {
        case OptimizerOneofCase.RmsPropOptimizer:
          RmsPropOptimizer = other.RmsPropOptimizer.Clone();
          break;
        case OptimizerOneofCase.MomentumOptimizer:
          MomentumOptimizer = other.MomentumOptimizer.Clone();
          break;
        case OptimizerOneofCase.AdamOptimizer:
          AdamOptimizer = other.AdamOptimizer.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Optimizer Clone() {
      return new Optimizer(this);
    }

    /// <summary>Field number for the "rms_prop_optimizer" field.</summary>
    public const int RmsPropOptimizerFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.RMSPropOptimizer RmsPropOptimizer {
      get { return optimizerCase_ == OptimizerOneofCase.RmsPropOptimizer ? (global::Tensorflow.Models.ObjectDetection.Protos.RMSPropOptimizer) optimizer_ : null; }
      set {
        optimizer_ = value;
        optimizerCase_ = value == null ? OptimizerOneofCase.None : OptimizerOneofCase.RmsPropOptimizer;
      }
    }

    /// <summary>Field number for the "momentum_optimizer" field.</summary>
    public const int MomentumOptimizerFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.MomentumOptimizer MomentumOptimizer {
      get { return optimizerCase_ == OptimizerOneofCase.MomentumOptimizer ? (global::Tensorflow.Models.ObjectDetection.Protos.MomentumOptimizer) optimizer_ : null; }
      set {
        optimizer_ = value;
        optimizerCase_ = value == null ? OptimizerOneofCase.None : OptimizerOneofCase.MomentumOptimizer;
      }
    }

    /// <summary>Field number for the "adam_optimizer" field.</summary>
    public const int AdamOptimizerFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.AdamOptimizer AdamOptimizer {
      get { return optimizerCase_ == OptimizerOneofCase.AdamOptimizer ? (global::Tensorflow.Models.ObjectDetection.Protos.AdamOptimizer) optimizer_ : null; }
      set {
        optimizer_ = value;
        optimizerCase_ = value == null ? OptimizerOneofCase.None : OptimizerOneofCase.AdamOptimizer;
      }
    }

    /// <summary>Field number for the "use_moving_average" field.</summary>
    public const int UseMovingAverageFieldNumber = 4;
    private bool useMovingAverage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseMovingAverage {
      get { return useMovingAverage_; }
      set {
        useMovingAverage_ = value;
      }
    }

    /// <summary>Field number for the "moving_average_decay" field.</summary>
    public const int MovingAverageDecayFieldNumber = 5;
    private float movingAverageDecay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MovingAverageDecay {
      get { return movingAverageDecay_; }
      set {
        movingAverageDecay_ = value;
      }
    }

    private object optimizer_;
    /// <summary>Enum of possible cases for the "optimizer" oneof.</summary>
    public enum OptimizerOneofCase {
      None = 0,
      RmsPropOptimizer = 1,
      MomentumOptimizer = 2,
      AdamOptimizer = 3,
    }
    private OptimizerOneofCase optimizerCase_ = OptimizerOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OptimizerOneofCase OptimizerCase {
      get { return optimizerCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptimizer() {
      optimizerCase_ = OptimizerOneofCase.None;
      optimizer_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Optimizer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Optimizer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RmsPropOptimizer, other.RmsPropOptimizer)) return false;
      if (!object.Equals(MomentumOptimizer, other.MomentumOptimizer)) return false;
      if (!object.Equals(AdamOptimizer, other.AdamOptimizer)) return false;
      if (UseMovingAverage != other.UseMovingAverage) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MovingAverageDecay, other.MovingAverageDecay)) return false;
      if (OptimizerCase != other.OptimizerCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (optimizerCase_ == OptimizerOneofCase.RmsPropOptimizer) hash ^= RmsPropOptimizer.GetHashCode();
      if (optimizerCase_ == OptimizerOneofCase.MomentumOptimizer) hash ^= MomentumOptimizer.GetHashCode();
      if (optimizerCase_ == OptimizerOneofCase.AdamOptimizer) hash ^= AdamOptimizer.GetHashCode();
      if (UseMovingAverage != false) hash ^= UseMovingAverage.GetHashCode();
      if (MovingAverageDecay != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MovingAverageDecay);
      hash ^= (int) optimizerCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (optimizerCase_ == OptimizerOneofCase.RmsPropOptimizer) {
        output.WriteRawTag(10);
        output.WriteMessage(RmsPropOptimizer);
      }
      if (optimizerCase_ == OptimizerOneofCase.MomentumOptimizer) {
        output.WriteRawTag(18);
        output.WriteMessage(MomentumOptimizer);
      }
      if (optimizerCase_ == OptimizerOneofCase.AdamOptimizer) {
        output.WriteRawTag(26);
        output.WriteMessage(AdamOptimizer);
      }
      if (UseMovingAverage != false) {
        output.WriteRawTag(32);
        output.WriteBool(UseMovingAverage);
      }
      if (MovingAverageDecay != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(MovingAverageDecay);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (optimizerCase_ == OptimizerOneofCase.RmsPropOptimizer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RmsPropOptimizer);
      }
      if (optimizerCase_ == OptimizerOneofCase.MomentumOptimizer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MomentumOptimizer);
      }
      if (optimizerCase_ == OptimizerOneofCase.AdamOptimizer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdamOptimizer);
      }
      if (UseMovingAverage != false) {
        size += 1 + 1;
      }
      if (MovingAverageDecay != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Optimizer other) {
      if (other == null) {
        return;
      }
      if (other.UseMovingAverage != false) {
        UseMovingAverage = other.UseMovingAverage;
      }
      if (other.MovingAverageDecay != 0F) {
        MovingAverageDecay = other.MovingAverageDecay;
      }
      switch (other.OptimizerCase) {
        case OptimizerOneofCase.RmsPropOptimizer:
          if (RmsPropOptimizer == null) {
            RmsPropOptimizer = new global::Tensorflow.Models.ObjectDetection.Protos.RMSPropOptimizer();
          }
          RmsPropOptimizer.MergeFrom(other.RmsPropOptimizer);
          break;
        case OptimizerOneofCase.MomentumOptimizer:
          if (MomentumOptimizer == null) {
            MomentumOptimizer = new global::Tensorflow.Models.ObjectDetection.Protos.MomentumOptimizer();
          }
          MomentumOptimizer.MergeFrom(other.MomentumOptimizer);
          break;
        case OptimizerOneofCase.AdamOptimizer:
          if (AdamOptimizer == null) {
            AdamOptimizer = new global::Tensorflow.Models.ObjectDetection.Protos.AdamOptimizer();
          }
          AdamOptimizer.MergeFrom(other.AdamOptimizer);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Tensorflow.Models.ObjectDetection.Protos.RMSPropOptimizer subBuilder = new global::Tensorflow.Models.ObjectDetection.Protos.RMSPropOptimizer();
            if (optimizerCase_ == OptimizerOneofCase.RmsPropOptimizer) {
              subBuilder.MergeFrom(RmsPropOptimizer);
            }
            input.ReadMessage(subBuilder);
            RmsPropOptimizer = subBuilder;
            break;
          }
          case 18: {
            global::Tensorflow.Models.ObjectDetection.Protos.MomentumOptimizer subBuilder = new global::Tensorflow.Models.ObjectDetection.Protos.MomentumOptimizer();
            if (optimizerCase_ == OptimizerOneofCase.MomentumOptimizer) {
              subBuilder.MergeFrom(MomentumOptimizer);
            }
            input.ReadMessage(subBuilder);
            MomentumOptimizer = subBuilder;
            break;
          }
          case 26: {
            global::Tensorflow.Models.ObjectDetection.Protos.AdamOptimizer subBuilder = new global::Tensorflow.Models.ObjectDetection.Protos.AdamOptimizer();
            if (optimizerCase_ == OptimizerOneofCase.AdamOptimizer) {
              subBuilder.MergeFrom(AdamOptimizer);
            }
            input.ReadMessage(subBuilder);
            AdamOptimizer = subBuilder;
            break;
          }
          case 32: {
            UseMovingAverage = input.ReadBool();
            break;
          }
          case 45: {
            MovingAverageDecay = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration message for the RMSPropOptimizer
  /// See: https://www.tensorflow.org/api_docs/python/tf/train/RMSPropOptimizer
  /// </summary>
  public sealed partial class RMSPropOptimizer : pb::IMessage<RMSPropOptimizer> {
    private static readonly pb::MessageParser<RMSPropOptimizer> _parser = new pb::MessageParser<RMSPropOptimizer>(() => new RMSPropOptimizer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RMSPropOptimizer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.OptimizerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RMSPropOptimizer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RMSPropOptimizer(RMSPropOptimizer other) : this() {
      learningRate_ = other.learningRate_ != null ? other.learningRate_.Clone() : null;
      momentumOptimizerValue_ = other.momentumOptimizerValue_;
      decay_ = other.decay_;
      epsilon_ = other.epsilon_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RMSPropOptimizer Clone() {
      return new RMSPropOptimizer(this);
    }

    /// <summary>Field number for the "learning_rate" field.</summary>
    public const int LearningRateFieldNumber = 1;
    private global::Tensorflow.Models.ObjectDetection.Protos.LearningRate learningRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.LearningRate LearningRate {
      get { return learningRate_; }
      set {
        learningRate_ = value;
      }
    }

    /// <summary>Field number for the "momentum_optimizer_value" field.</summary>
    public const int MomentumOptimizerValueFieldNumber = 2;
    private float momentumOptimizerValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MomentumOptimizerValue {
      get { return momentumOptimizerValue_; }
      set {
        momentumOptimizerValue_ = value;
      }
    }

    /// <summary>Field number for the "decay" field.</summary>
    public const int DecayFieldNumber = 3;
    private float decay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Decay {
      get { return decay_; }
      set {
        decay_ = value;
      }
    }

    /// <summary>Field number for the "epsilon" field.</summary>
    public const int EpsilonFieldNumber = 4;
    private float epsilon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Epsilon {
      get { return epsilon_; }
      set {
        epsilon_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RMSPropOptimizer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RMSPropOptimizer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LearningRate, other.LearningRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MomentumOptimizerValue, other.MomentumOptimizerValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Decay, other.Decay)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Epsilon, other.Epsilon)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (learningRate_ != null) hash ^= LearningRate.GetHashCode();
      if (MomentumOptimizerValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MomentumOptimizerValue);
      if (Decay != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Decay);
      if (Epsilon != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Epsilon);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (learningRate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LearningRate);
      }
      if (MomentumOptimizerValue != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(MomentumOptimizerValue);
      }
      if (Decay != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Decay);
      }
      if (Epsilon != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Epsilon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (learningRate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LearningRate);
      }
      if (MomentumOptimizerValue != 0F) {
        size += 1 + 4;
      }
      if (Decay != 0F) {
        size += 1 + 4;
      }
      if (Epsilon != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RMSPropOptimizer other) {
      if (other == null) {
        return;
      }
      if (other.learningRate_ != null) {
        if (learningRate_ == null) {
          learningRate_ = new global::Tensorflow.Models.ObjectDetection.Protos.LearningRate();
        }
        LearningRate.MergeFrom(other.LearningRate);
      }
      if (other.MomentumOptimizerValue != 0F) {
        MomentumOptimizerValue = other.MomentumOptimizerValue;
      }
      if (other.Decay != 0F) {
        Decay = other.Decay;
      }
      if (other.Epsilon != 0F) {
        Epsilon = other.Epsilon;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (learningRate_ == null) {
              learningRate_ = new global::Tensorflow.Models.ObjectDetection.Protos.LearningRate();
            }
            input.ReadMessage(learningRate_);
            break;
          }
          case 21: {
            MomentumOptimizerValue = input.ReadFloat();
            break;
          }
          case 29: {
            Decay = input.ReadFloat();
            break;
          }
          case 37: {
            Epsilon = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration message for the MomentumOptimizer
  /// See: https://www.tensorflow.org/api_docs/python/tf/train/MomentumOptimizer
  /// </summary>
  public sealed partial class MomentumOptimizer : pb::IMessage<MomentumOptimizer> {
    private static readonly pb::MessageParser<MomentumOptimizer> _parser = new pb::MessageParser<MomentumOptimizer>(() => new MomentumOptimizer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MomentumOptimizer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.OptimizerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MomentumOptimizer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MomentumOptimizer(MomentumOptimizer other) : this() {
      learningRate_ = other.learningRate_ != null ? other.learningRate_.Clone() : null;
      momentumOptimizerValue_ = other.momentumOptimizerValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MomentumOptimizer Clone() {
      return new MomentumOptimizer(this);
    }

    /// <summary>Field number for the "learning_rate" field.</summary>
    public const int LearningRateFieldNumber = 1;
    private global::Tensorflow.Models.ObjectDetection.Protos.LearningRate learningRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.LearningRate LearningRate {
      get { return learningRate_; }
      set {
        learningRate_ = value;
      }
    }

    /// <summary>Field number for the "momentum_optimizer_value" field.</summary>
    public const int MomentumOptimizerValueFieldNumber = 2;
    private float momentumOptimizerValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MomentumOptimizerValue {
      get { return momentumOptimizerValue_; }
      set {
        momentumOptimizerValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MomentumOptimizer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MomentumOptimizer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LearningRate, other.LearningRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MomentumOptimizerValue, other.MomentumOptimizerValue)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (learningRate_ != null) hash ^= LearningRate.GetHashCode();
      if (MomentumOptimizerValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MomentumOptimizerValue);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (learningRate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LearningRate);
      }
      if (MomentumOptimizerValue != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(MomentumOptimizerValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (learningRate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LearningRate);
      }
      if (MomentumOptimizerValue != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MomentumOptimizer other) {
      if (other == null) {
        return;
      }
      if (other.learningRate_ != null) {
        if (learningRate_ == null) {
          learningRate_ = new global::Tensorflow.Models.ObjectDetection.Protos.LearningRate();
        }
        LearningRate.MergeFrom(other.LearningRate);
      }
      if (other.MomentumOptimizerValue != 0F) {
        MomentumOptimizerValue = other.MomentumOptimizerValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (learningRate_ == null) {
              learningRate_ = new global::Tensorflow.Models.ObjectDetection.Protos.LearningRate();
            }
            input.ReadMessage(learningRate_);
            break;
          }
          case 21: {
            MomentumOptimizerValue = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration message for the AdamOptimizer
  /// See: https://www.tensorflow.org/api_docs/python/tf/train/AdamOptimizer
  /// </summary>
  public sealed partial class AdamOptimizer : pb::IMessage<AdamOptimizer> {
    private static readonly pb::MessageParser<AdamOptimizer> _parser = new pb::MessageParser<AdamOptimizer>(() => new AdamOptimizer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdamOptimizer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.OptimizerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdamOptimizer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdamOptimizer(AdamOptimizer other) : this() {
      learningRate_ = other.learningRate_ != null ? other.learningRate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdamOptimizer Clone() {
      return new AdamOptimizer(this);
    }

    /// <summary>Field number for the "learning_rate" field.</summary>
    public const int LearningRateFieldNumber = 1;
    private global::Tensorflow.Models.ObjectDetection.Protos.LearningRate learningRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.LearningRate LearningRate {
      get { return learningRate_; }
      set {
        learningRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdamOptimizer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdamOptimizer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LearningRate, other.LearningRate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (learningRate_ != null) hash ^= LearningRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (learningRate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LearningRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (learningRate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LearningRate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdamOptimizer other) {
      if (other == null) {
        return;
      }
      if (other.learningRate_ != null) {
        if (learningRate_ == null) {
          learningRate_ = new global::Tensorflow.Models.ObjectDetection.Protos.LearningRate();
        }
        LearningRate.MergeFrom(other.LearningRate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (learningRate_ == null) {
              learningRate_ = new global::Tensorflow.Models.ObjectDetection.Protos.LearningRate();
            }
            input.ReadMessage(learningRate_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration message for optimizer learning rate.
  /// </summary>
  public sealed partial class LearningRate : pb::IMessage<LearningRate> {
    private static readonly pb::MessageParser<LearningRate> _parser = new pb::MessageParser<LearningRate>(() => new LearningRate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LearningRate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.OptimizerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LearningRate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LearningRate(LearningRate other) : this() {
      switch (other.LearningRateCase) {
        case LearningRateOneofCase.ConstantLearningRate:
          ConstantLearningRate = other.ConstantLearningRate.Clone();
          break;
        case LearningRateOneofCase.ExponentialDecayLearningRate:
          ExponentialDecayLearningRate = other.ExponentialDecayLearningRate.Clone();
          break;
        case LearningRateOneofCase.ManualStepLearningRate:
          ManualStepLearningRate = other.ManualStepLearningRate.Clone();
          break;
        case LearningRateOneofCase.CosineDecayLearningRate:
          CosineDecayLearningRate = other.CosineDecayLearningRate.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LearningRate Clone() {
      return new LearningRate(this);
    }

    /// <summary>Field number for the "constant_learning_rate" field.</summary>
    public const int ConstantLearningRateFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.ConstantLearningRate ConstantLearningRate {
      get { return learningRateCase_ == LearningRateOneofCase.ConstantLearningRate ? (global::Tensorflow.Models.ObjectDetection.Protos.ConstantLearningRate) learningRate_ : null; }
      set {
        learningRate_ = value;
        learningRateCase_ = value == null ? LearningRateOneofCase.None : LearningRateOneofCase.ConstantLearningRate;
      }
    }

    /// <summary>Field number for the "exponential_decay_learning_rate" field.</summary>
    public const int ExponentialDecayLearningRateFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.ExponentialDecayLearningRate ExponentialDecayLearningRate {
      get { return learningRateCase_ == LearningRateOneofCase.ExponentialDecayLearningRate ? (global::Tensorflow.Models.ObjectDetection.Protos.ExponentialDecayLearningRate) learningRate_ : null; }
      set {
        learningRate_ = value;
        learningRateCase_ = value == null ? LearningRateOneofCase.None : LearningRateOneofCase.ExponentialDecayLearningRate;
      }
    }

    /// <summary>Field number for the "manual_step_learning_rate" field.</summary>
    public const int ManualStepLearningRateFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.ManualStepLearningRate ManualStepLearningRate {
      get { return learningRateCase_ == LearningRateOneofCase.ManualStepLearningRate ? (global::Tensorflow.Models.ObjectDetection.Protos.ManualStepLearningRate) learningRate_ : null; }
      set {
        learningRate_ = value;
        learningRateCase_ = value == null ? LearningRateOneofCase.None : LearningRateOneofCase.ManualStepLearningRate;
      }
    }

    /// <summary>Field number for the "cosine_decay_learning_rate" field.</summary>
    public const int CosineDecayLearningRateFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Models.ObjectDetection.Protos.CosineDecayLearningRate CosineDecayLearningRate {
      get { return learningRateCase_ == LearningRateOneofCase.CosineDecayLearningRate ? (global::Tensorflow.Models.ObjectDetection.Protos.CosineDecayLearningRate) learningRate_ : null; }
      set {
        learningRate_ = value;
        learningRateCase_ = value == null ? LearningRateOneofCase.None : LearningRateOneofCase.CosineDecayLearningRate;
      }
    }

    private object learningRate_;
    /// <summary>Enum of possible cases for the "learning_rate" oneof.</summary>
    public enum LearningRateOneofCase {
      None = 0,
      ConstantLearningRate = 1,
      ExponentialDecayLearningRate = 2,
      ManualStepLearningRate = 3,
      CosineDecayLearningRate = 4,
    }
    private LearningRateOneofCase learningRateCase_ = LearningRateOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LearningRateOneofCase LearningRateCase {
      get { return learningRateCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLearningRate() {
      learningRateCase_ = LearningRateOneofCase.None;
      learningRate_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LearningRate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LearningRate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConstantLearningRate, other.ConstantLearningRate)) return false;
      if (!object.Equals(ExponentialDecayLearningRate, other.ExponentialDecayLearningRate)) return false;
      if (!object.Equals(ManualStepLearningRate, other.ManualStepLearningRate)) return false;
      if (!object.Equals(CosineDecayLearningRate, other.CosineDecayLearningRate)) return false;
      if (LearningRateCase != other.LearningRateCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (learningRateCase_ == LearningRateOneofCase.ConstantLearningRate) hash ^= ConstantLearningRate.GetHashCode();
      if (learningRateCase_ == LearningRateOneofCase.ExponentialDecayLearningRate) hash ^= ExponentialDecayLearningRate.GetHashCode();
      if (learningRateCase_ == LearningRateOneofCase.ManualStepLearningRate) hash ^= ManualStepLearningRate.GetHashCode();
      if (learningRateCase_ == LearningRateOneofCase.CosineDecayLearningRate) hash ^= CosineDecayLearningRate.GetHashCode();
      hash ^= (int) learningRateCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (learningRateCase_ == LearningRateOneofCase.ConstantLearningRate) {
        output.WriteRawTag(10);
        output.WriteMessage(ConstantLearningRate);
      }
      if (learningRateCase_ == LearningRateOneofCase.ExponentialDecayLearningRate) {
        output.WriteRawTag(18);
        output.WriteMessage(ExponentialDecayLearningRate);
      }
      if (learningRateCase_ == LearningRateOneofCase.ManualStepLearningRate) {
        output.WriteRawTag(26);
        output.WriteMessage(ManualStepLearningRate);
      }
      if (learningRateCase_ == LearningRateOneofCase.CosineDecayLearningRate) {
        output.WriteRawTag(34);
        output.WriteMessage(CosineDecayLearningRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (learningRateCase_ == LearningRateOneofCase.ConstantLearningRate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConstantLearningRate);
      }
      if (learningRateCase_ == LearningRateOneofCase.ExponentialDecayLearningRate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExponentialDecayLearningRate);
      }
      if (learningRateCase_ == LearningRateOneofCase.ManualStepLearningRate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ManualStepLearningRate);
      }
      if (learningRateCase_ == LearningRateOneofCase.CosineDecayLearningRate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CosineDecayLearningRate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LearningRate other) {
      if (other == null) {
        return;
      }
      switch (other.LearningRateCase) {
        case LearningRateOneofCase.ConstantLearningRate:
          if (ConstantLearningRate == null) {
            ConstantLearningRate = new global::Tensorflow.Models.ObjectDetection.Protos.ConstantLearningRate();
          }
          ConstantLearningRate.MergeFrom(other.ConstantLearningRate);
          break;
        case LearningRateOneofCase.ExponentialDecayLearningRate:
          if (ExponentialDecayLearningRate == null) {
            ExponentialDecayLearningRate = new global::Tensorflow.Models.ObjectDetection.Protos.ExponentialDecayLearningRate();
          }
          ExponentialDecayLearningRate.MergeFrom(other.ExponentialDecayLearningRate);
          break;
        case LearningRateOneofCase.ManualStepLearningRate:
          if (ManualStepLearningRate == null) {
            ManualStepLearningRate = new global::Tensorflow.Models.ObjectDetection.Protos.ManualStepLearningRate();
          }
          ManualStepLearningRate.MergeFrom(other.ManualStepLearningRate);
          break;
        case LearningRateOneofCase.CosineDecayLearningRate:
          if (CosineDecayLearningRate == null) {
            CosineDecayLearningRate = new global::Tensorflow.Models.ObjectDetection.Protos.CosineDecayLearningRate();
          }
          CosineDecayLearningRate.MergeFrom(other.CosineDecayLearningRate);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Tensorflow.Models.ObjectDetection.Protos.ConstantLearningRate subBuilder = new global::Tensorflow.Models.ObjectDetection.Protos.ConstantLearningRate();
            if (learningRateCase_ == LearningRateOneofCase.ConstantLearningRate) {
              subBuilder.MergeFrom(ConstantLearningRate);
            }
            input.ReadMessage(subBuilder);
            ConstantLearningRate = subBuilder;
            break;
          }
          case 18: {
            global::Tensorflow.Models.ObjectDetection.Protos.ExponentialDecayLearningRate subBuilder = new global::Tensorflow.Models.ObjectDetection.Protos.ExponentialDecayLearningRate();
            if (learningRateCase_ == LearningRateOneofCase.ExponentialDecayLearningRate) {
              subBuilder.MergeFrom(ExponentialDecayLearningRate);
            }
            input.ReadMessage(subBuilder);
            ExponentialDecayLearningRate = subBuilder;
            break;
          }
          case 26: {
            global::Tensorflow.Models.ObjectDetection.Protos.ManualStepLearningRate subBuilder = new global::Tensorflow.Models.ObjectDetection.Protos.ManualStepLearningRate();
            if (learningRateCase_ == LearningRateOneofCase.ManualStepLearningRate) {
              subBuilder.MergeFrom(ManualStepLearningRate);
            }
            input.ReadMessage(subBuilder);
            ManualStepLearningRate = subBuilder;
            break;
          }
          case 34: {
            global::Tensorflow.Models.ObjectDetection.Protos.CosineDecayLearningRate subBuilder = new global::Tensorflow.Models.ObjectDetection.Protos.CosineDecayLearningRate();
            if (learningRateCase_ == LearningRateOneofCase.CosineDecayLearningRate) {
              subBuilder.MergeFrom(CosineDecayLearningRate);
            }
            input.ReadMessage(subBuilder);
            CosineDecayLearningRate = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration message for a constant learning rate.
  /// </summary>
  public sealed partial class ConstantLearningRate : pb::IMessage<ConstantLearningRate> {
    private static readonly pb::MessageParser<ConstantLearningRate> _parser = new pb::MessageParser<ConstantLearningRate>(() => new ConstantLearningRate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConstantLearningRate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.OptimizerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConstantLearningRate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConstantLearningRate(ConstantLearningRate other) : this() {
      learningRate_ = other.learningRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConstantLearningRate Clone() {
      return new ConstantLearningRate(this);
    }

    /// <summary>Field number for the "learning_rate" field.</summary>
    public const int LearningRateFieldNumber = 1;
    private float learningRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float LearningRate {
      get { return learningRate_; }
      set {
        learningRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConstantLearningRate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConstantLearningRate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LearningRate, other.LearningRate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LearningRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LearningRate);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LearningRate != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(LearningRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LearningRate != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConstantLearningRate other) {
      if (other == null) {
        return;
      }
      if (other.LearningRate != 0F) {
        LearningRate = other.LearningRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            LearningRate = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration message for an exponentially decaying learning rate.
  /// See https://www.tensorflow.org/versions/master/api_docs/python/train/ \
  ///     decaying_the_learning_rate#exponential_decay
  /// </summary>
  public sealed partial class ExponentialDecayLearningRate : pb::IMessage<ExponentialDecayLearningRate> {
    private static readonly pb::MessageParser<ExponentialDecayLearningRate> _parser = new pb::MessageParser<ExponentialDecayLearningRate>(() => new ExponentialDecayLearningRate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExponentialDecayLearningRate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.OptimizerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExponentialDecayLearningRate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExponentialDecayLearningRate(ExponentialDecayLearningRate other) : this() {
      initialLearningRate_ = other.initialLearningRate_;
      decaySteps_ = other.decaySteps_;
      decayFactor_ = other.decayFactor_;
      staircase_ = other.staircase_;
      burninLearningRate_ = other.burninLearningRate_;
      burninSteps_ = other.burninSteps_;
      minLearningRate_ = other.minLearningRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExponentialDecayLearningRate Clone() {
      return new ExponentialDecayLearningRate(this);
    }

    /// <summary>Field number for the "initial_learning_rate" field.</summary>
    public const int InitialLearningRateFieldNumber = 1;
    private float initialLearningRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float InitialLearningRate {
      get { return initialLearningRate_; }
      set {
        initialLearningRate_ = value;
      }
    }

    /// <summary>Field number for the "decay_steps" field.</summary>
    public const int DecayStepsFieldNumber = 2;
    private uint decaySteps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DecaySteps {
      get { return decaySteps_; }
      set {
        decaySteps_ = value;
      }
    }

    /// <summary>Field number for the "decay_factor" field.</summary>
    public const int DecayFactorFieldNumber = 3;
    private float decayFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DecayFactor {
      get { return decayFactor_; }
      set {
        decayFactor_ = value;
      }
    }

    /// <summary>Field number for the "staircase" field.</summary>
    public const int StaircaseFieldNumber = 4;
    private bool staircase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Staircase {
      get { return staircase_; }
      set {
        staircase_ = value;
      }
    }

    /// <summary>Field number for the "burnin_learning_rate" field.</summary>
    public const int BurninLearningRateFieldNumber = 5;
    private float burninLearningRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float BurninLearningRate {
      get { return burninLearningRate_; }
      set {
        burninLearningRate_ = value;
      }
    }

    /// <summary>Field number for the "burnin_steps" field.</summary>
    public const int BurninStepsFieldNumber = 6;
    private uint burninSteps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BurninSteps {
      get { return burninSteps_; }
      set {
        burninSteps_ = value;
      }
    }

    /// <summary>Field number for the "min_learning_rate" field.</summary>
    public const int MinLearningRateFieldNumber = 7;
    private float minLearningRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MinLearningRate {
      get { return minLearningRate_; }
      set {
        minLearningRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExponentialDecayLearningRate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExponentialDecayLearningRate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(InitialLearningRate, other.InitialLearningRate)) return false;
      if (DecaySteps != other.DecaySteps) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DecayFactor, other.DecayFactor)) return false;
      if (Staircase != other.Staircase) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BurninLearningRate, other.BurninLearningRate)) return false;
      if (BurninSteps != other.BurninSteps) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinLearningRate, other.MinLearningRate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InitialLearningRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(InitialLearningRate);
      if (DecaySteps != 0) hash ^= DecaySteps.GetHashCode();
      if (DecayFactor != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DecayFactor);
      if (Staircase != false) hash ^= Staircase.GetHashCode();
      if (BurninLearningRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BurninLearningRate);
      if (BurninSteps != 0) hash ^= BurninSteps.GetHashCode();
      if (MinLearningRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinLearningRate);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InitialLearningRate != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(InitialLearningRate);
      }
      if (DecaySteps != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(DecaySteps);
      }
      if (DecayFactor != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(DecayFactor);
      }
      if (Staircase != false) {
        output.WriteRawTag(32);
        output.WriteBool(Staircase);
      }
      if (BurninLearningRate != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(BurninLearningRate);
      }
      if (BurninSteps != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(BurninSteps);
      }
      if (MinLearningRate != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(MinLearningRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InitialLearningRate != 0F) {
        size += 1 + 4;
      }
      if (DecaySteps != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DecaySteps);
      }
      if (DecayFactor != 0F) {
        size += 1 + 4;
      }
      if (Staircase != false) {
        size += 1 + 1;
      }
      if (BurninLearningRate != 0F) {
        size += 1 + 4;
      }
      if (BurninSteps != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BurninSteps);
      }
      if (MinLearningRate != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExponentialDecayLearningRate other) {
      if (other == null) {
        return;
      }
      if (other.InitialLearningRate != 0F) {
        InitialLearningRate = other.InitialLearningRate;
      }
      if (other.DecaySteps != 0) {
        DecaySteps = other.DecaySteps;
      }
      if (other.DecayFactor != 0F) {
        DecayFactor = other.DecayFactor;
      }
      if (other.Staircase != false) {
        Staircase = other.Staircase;
      }
      if (other.BurninLearningRate != 0F) {
        BurninLearningRate = other.BurninLearningRate;
      }
      if (other.BurninSteps != 0) {
        BurninSteps = other.BurninSteps;
      }
      if (other.MinLearningRate != 0F) {
        MinLearningRate = other.MinLearningRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            InitialLearningRate = input.ReadFloat();
            break;
          }
          case 16: {
            DecaySteps = input.ReadUInt32();
            break;
          }
          case 29: {
            DecayFactor = input.ReadFloat();
            break;
          }
          case 32: {
            Staircase = input.ReadBool();
            break;
          }
          case 45: {
            BurninLearningRate = input.ReadFloat();
            break;
          }
          case 48: {
            BurninSteps = input.ReadUInt32();
            break;
          }
          case 61: {
            MinLearningRate = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration message for a manually defined learning rate schedule.
  /// </summary>
  public sealed partial class ManualStepLearningRate : pb::IMessage<ManualStepLearningRate> {
    private static readonly pb::MessageParser<ManualStepLearningRate> _parser = new pb::MessageParser<ManualStepLearningRate>(() => new ManualStepLearningRate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ManualStepLearningRate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.OptimizerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManualStepLearningRate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManualStepLearningRate(ManualStepLearningRate other) : this() {
      initialLearningRate_ = other.initialLearningRate_;
      schedule_ = other.schedule_.Clone();
      warmup_ = other.warmup_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManualStepLearningRate Clone() {
      return new ManualStepLearningRate(this);
    }

    /// <summary>Field number for the "initial_learning_rate" field.</summary>
    public const int InitialLearningRateFieldNumber = 1;
    private float initialLearningRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float InitialLearningRate {
      get { return initialLearningRate_; }
      set {
        initialLearningRate_ = value;
      }
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tensorflow.Models.ObjectDetection.Protos.ManualStepLearningRate.Types.LearningRateSchedule> _repeated_schedule_codec
        = pb::FieldCodec.ForMessage(18, global::Tensorflow.Models.ObjectDetection.Protos.ManualStepLearningRate.Types.LearningRateSchedule.Parser);
    private readonly pbc::RepeatedField<global::Tensorflow.Models.ObjectDetection.Protos.ManualStepLearningRate.Types.LearningRateSchedule> schedule_ = new pbc::RepeatedField<global::Tensorflow.Models.ObjectDetection.Protos.ManualStepLearningRate.Types.LearningRateSchedule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tensorflow.Models.ObjectDetection.Protos.ManualStepLearningRate.Types.LearningRateSchedule> Schedule {
      get { return schedule_; }
    }

    /// <summary>Field number for the "warmup" field.</summary>
    public const int WarmupFieldNumber = 3;
    private bool warmup_;
    /// <summary>
    /// Whether to linearly interpolate learning rates for steps in
    /// [0, schedule[0].step].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Warmup {
      get { return warmup_; }
      set {
        warmup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ManualStepLearningRate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ManualStepLearningRate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(InitialLearningRate, other.InitialLearningRate)) return false;
      if(!schedule_.Equals(other.schedule_)) return false;
      if (Warmup != other.Warmup) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InitialLearningRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(InitialLearningRate);
      hash ^= schedule_.GetHashCode();
      if (Warmup != false) hash ^= Warmup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InitialLearningRate != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(InitialLearningRate);
      }
      schedule_.WriteTo(output, _repeated_schedule_codec);
      if (Warmup != false) {
        output.WriteRawTag(24);
        output.WriteBool(Warmup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InitialLearningRate != 0F) {
        size += 1 + 4;
      }
      size += schedule_.CalculateSize(_repeated_schedule_codec);
      if (Warmup != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ManualStepLearningRate other) {
      if (other == null) {
        return;
      }
      if (other.InitialLearningRate != 0F) {
        InitialLearningRate = other.InitialLearningRate;
      }
      schedule_.Add(other.schedule_);
      if (other.Warmup != false) {
        Warmup = other.Warmup;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            InitialLearningRate = input.ReadFloat();
            break;
          }
          case 18: {
            schedule_.AddEntriesFrom(input, _repeated_schedule_codec);
            break;
          }
          case 24: {
            Warmup = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ManualStepLearningRate message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class LearningRateSchedule : pb::IMessage<LearningRateSchedule> {
        private static readonly pb::MessageParser<LearningRateSchedule> _parser = new pb::MessageParser<LearningRateSchedule>(() => new LearningRateSchedule());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<LearningRateSchedule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tensorflow.Models.ObjectDetection.Protos.ManualStepLearningRate.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LearningRateSchedule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LearningRateSchedule(LearningRateSchedule other) : this() {
          step_ = other.step_;
          learningRate_ = other.learningRate_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LearningRateSchedule Clone() {
          return new LearningRateSchedule(this);
        }

        /// <summary>Field number for the "step" field.</summary>
        public const int StepFieldNumber = 1;
        private uint step_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Step {
          get { return step_; }
          set {
            step_ = value;
          }
        }

        /// <summary>Field number for the "learning_rate" field.</summary>
        public const int LearningRateFieldNumber = 2;
        private float learningRate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float LearningRate {
          get { return learningRate_; }
          set {
            learningRate_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as LearningRateSchedule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(LearningRateSchedule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Step != other.Step) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LearningRate, other.LearningRate)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Step != 0) hash ^= Step.GetHashCode();
          if (LearningRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LearningRate);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Step != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Step);
          }
          if (LearningRate != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(LearningRate);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Step != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Step);
          }
          if (LearningRate != 0F) {
            size += 1 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(LearningRateSchedule other) {
          if (other == null) {
            return;
          }
          if (other.Step != 0) {
            Step = other.Step;
          }
          if (other.LearningRate != 0F) {
            LearningRate = other.LearningRate;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Step = input.ReadUInt32();
                break;
              }
              case 21: {
                LearningRate = input.ReadFloat();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Configuration message for a cosine decaying learning rate as defined in
  /// object_detection/utils/learning_schedules.py
  /// </summary>
  public sealed partial class CosineDecayLearningRate : pb::IMessage<CosineDecayLearningRate> {
    private static readonly pb::MessageParser<CosineDecayLearningRate> _parser = new pb::MessageParser<CosineDecayLearningRate>(() => new CosineDecayLearningRate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CosineDecayLearningRate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Models.ObjectDetection.Protos.OptimizerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CosineDecayLearningRate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CosineDecayLearningRate(CosineDecayLearningRate other) : this() {
      learningRateBase_ = other.learningRateBase_;
      totalSteps_ = other.totalSteps_;
      warmupLearningRate_ = other.warmupLearningRate_;
      warmupSteps_ = other.warmupSteps_;
      holdBaseRateSteps_ = other.holdBaseRateSteps_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CosineDecayLearningRate Clone() {
      return new CosineDecayLearningRate(this);
    }

    /// <summary>Field number for the "learning_rate_base" field.</summary>
    public const int LearningRateBaseFieldNumber = 1;
    private float learningRateBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float LearningRateBase {
      get { return learningRateBase_; }
      set {
        learningRateBase_ = value;
      }
    }

    /// <summary>Field number for the "total_steps" field.</summary>
    public const int TotalStepsFieldNumber = 2;
    private uint totalSteps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TotalSteps {
      get { return totalSteps_; }
      set {
        totalSteps_ = value;
      }
    }

    /// <summary>Field number for the "warmup_learning_rate" field.</summary>
    public const int WarmupLearningRateFieldNumber = 3;
    private float warmupLearningRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float WarmupLearningRate {
      get { return warmupLearningRate_; }
      set {
        warmupLearningRate_ = value;
      }
    }

    /// <summary>Field number for the "warmup_steps" field.</summary>
    public const int WarmupStepsFieldNumber = 4;
    private uint warmupSteps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WarmupSteps {
      get { return warmupSteps_; }
      set {
        warmupSteps_ = value;
      }
    }

    /// <summary>Field number for the "hold_base_rate_steps" field.</summary>
    public const int HoldBaseRateStepsFieldNumber = 5;
    private uint holdBaseRateSteps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HoldBaseRateSteps {
      get { return holdBaseRateSteps_; }
      set {
        holdBaseRateSteps_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CosineDecayLearningRate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CosineDecayLearningRate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LearningRateBase, other.LearningRateBase)) return false;
      if (TotalSteps != other.TotalSteps) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WarmupLearningRate, other.WarmupLearningRate)) return false;
      if (WarmupSteps != other.WarmupSteps) return false;
      if (HoldBaseRateSteps != other.HoldBaseRateSteps) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LearningRateBase != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LearningRateBase);
      if (TotalSteps != 0) hash ^= TotalSteps.GetHashCode();
      if (WarmupLearningRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WarmupLearningRate);
      if (WarmupSteps != 0) hash ^= WarmupSteps.GetHashCode();
      if (HoldBaseRateSteps != 0) hash ^= HoldBaseRateSteps.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LearningRateBase != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(LearningRateBase);
      }
      if (TotalSteps != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TotalSteps);
      }
      if (WarmupLearningRate != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(WarmupLearningRate);
      }
      if (WarmupSteps != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(WarmupSteps);
      }
      if (HoldBaseRateSteps != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(HoldBaseRateSteps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LearningRateBase != 0F) {
        size += 1 + 4;
      }
      if (TotalSteps != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalSteps);
      }
      if (WarmupLearningRate != 0F) {
        size += 1 + 4;
      }
      if (WarmupSteps != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WarmupSteps);
      }
      if (HoldBaseRateSteps != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HoldBaseRateSteps);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CosineDecayLearningRate other) {
      if (other == null) {
        return;
      }
      if (other.LearningRateBase != 0F) {
        LearningRateBase = other.LearningRateBase;
      }
      if (other.TotalSteps != 0) {
        TotalSteps = other.TotalSteps;
      }
      if (other.WarmupLearningRate != 0F) {
        WarmupLearningRate = other.WarmupLearningRate;
      }
      if (other.WarmupSteps != 0) {
        WarmupSteps = other.WarmupSteps;
      }
      if (other.HoldBaseRateSteps != 0) {
        HoldBaseRateSteps = other.HoldBaseRateSteps;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            LearningRateBase = input.ReadFloat();
            break;
          }
          case 16: {
            TotalSteps = input.ReadUInt32();
            break;
          }
          case 29: {
            WarmupLearningRate = input.ReadFloat();
            break;
          }
          case 32: {
            WarmupSteps = input.ReadUInt32();
            break;
          }
          case 40: {
            HoldBaseRateSteps = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
